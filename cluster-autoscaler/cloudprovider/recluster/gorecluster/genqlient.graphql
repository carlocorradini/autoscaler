# NodePools returns all available node pools.
# The list of nodes is also returned for each node pool.
#
# @genqlient(omitempty: true)
query NodePools {
    # @genqlient(typename: "NodePool")
    nodePools {
        ID: id
        name
        autoScale
        count
        minNodes
        maxNodes
        # @genqlient(typename: "Node")
        nodes(where: { nodePoolAssigned: { equals: true } }) {
            ID: id
            # @genqlient(typename: "Status")
            status {
                status
                message
            }
        }
        createdAt
        updatedAt
    }
}

# UpdateNodePool update the node pool.
# It returns the updated node pool if it is successful.
#
# @genqlient(omitempty: true)
mutation UpdateNodePool(
    $id: ID!,
    $input: UpdateNodePoolInput!
) {
    # @genqlient(typename: "NodePool")
    updateNodePool(id: $id, data: $input) {
        ID: id
        name
        autoScale
        count
        minNodes
        maxNodes
        # @genqlient(typename: "Node")
        nodes(where: { nodePoolAssigned: { equals: true } }) {
            ID: id
            # @genqlient(typename: "Status")
            status {
                status
                message
            }
        }
        createdAt
        updatedAt
    }
}

# UnassignNode unassign the node from its node pool.
# It returns the unassigned node if it is successful.
#
# @genqlient(omitempty: true)
mutation UnassignNode(
    $id: ID!
) {
    # @genqlient(typename: "Node")
    unassignNode(id: $id) {
        ID: id
        # @genqlient(typename: "Status")
        status {
            status
            message
        }
    }
}